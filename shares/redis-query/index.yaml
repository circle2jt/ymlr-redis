vars:
  redisURI: redis://:pwd@192.168.11.5:6379
  histories:
    - title: Clear
      value: clear
runs:
  - id: redis
    ymlr-redis:
      uri: ${$vars.redisURI}
      runs:
        - js: |
            await this.parent.client.ping()
  - name: Redis connected to "${$vars.redisURI.split('@')[1]}"
  - loop: ${true}
    runs:
      - input'suggest:
          title: Enter command
          choices: ${$vars.histories}
          default: ""
          suggestType: INCLUDE_AND_ALLOW_NEW
        vars: cmd
      - force: true
        js:
          if: ${$vars.cmd?.length}
          script: |
            const r = /("[^"]+"|[^\s"]+)/g
            const sargs = []
            let b = r.exec($vars.cmd)
            while (b) {
              let arg = b[1].trim()
              if (arg[0] === '"' && arg[0] === arg[arg.length-1]) {
                arg = arg.substring(1, arg.length -1)
              }
              sargs.push(arg)
              b = r.exec($vars.cmd)
            }
            const [cmd, ...args] = sargs.filter(a => !!a)
            if (cmd.startsWith('clear')) return console.clear()
            const rs = await $vars.redis.$.client.call(cmd, ...args)
            this.logger.info('%o', rs)
            $vars.histories.push({
              title: $vars.cmd,
              value: $vars.cmd
            })
